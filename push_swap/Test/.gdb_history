br is_modulo_sorted 
r
q
br is_modulo_sorted 
r
n
q
br is_modulo_sorted 
r
n
print stack.array[stack.start-1 + (min + i) % stack.size]
stack.array[stack.start-1 + (min + i + 1) % stack.size]
print stack.array[stack.start-1 + (min + i + 1) % stack.size]
print stack.start-1 + (min + i + 1)
print min
print stack.array[min]
q
q
br main.c:69
r
print stack.array[stack.start-1 + (min + i) % stack.size]
print stack.array[stack.start-1 + (min + i + 1) % stack.size]
print stack.start-1 + (min + i + 1)
print stack.start-1 + (min + i + 1) % stack.size
print stack.start-1
print stack.start-1 + min 
print stac.array[min]
print stack.array[min]
q
br is_modulo_sorted 
r
n
q
br is_modulo_sorted 
r
print stack.start
n
print stack.array[stack.start + i]
print stack.array[stack.start + min]
rq
q
br is_modulo_sorted 
r
n
print stack.array[stack.start -1 + min]
n
q
q
br is_modulo_sorted 
r
n
print min
n
br 70
c
print stack.array[stack.start-1 + (min + i) % stack.size]
print stack.start-1
print stack.start-1 + (min = i)
print stack.start-1 + (min + i)
print i
print min
q
br is_modulo_sorted 
r
br 70
r
c
print min
print stack.start-1 + (min + i)
print stack.start-1 + (min + i) % stack.size
print stack.start-1 + (min + i + 1)
print stack.array[stack.start-1 + (min + i + 1) % stack.size])
print stack.array[stack.start-1 + (min + i + 1) % stack.size]
print stack.array[5]
q
br is_modulo_sorted 
r
br 70
c
q
q
br is_modulo_sorted 
br 70
r
f
c
print stack.array[stack.start-1 + (min + i) % stack.size]
print stack.array[stack.start-1 + (min + i + 1) % stack.size])
print stack.array[stack.start-1 + (min + i + 1) % stack.size]
print stack.start-1 + (min + i + 1)
print stack.start-1 + (min + i + 1) % stack.size
print stack.size
q
q
