br main
r
n
r
n
s
n
br main
r
n
s
n
br main
r
n
s
n
:q
q
br init_philo 
r
n
print output
print output==NUL:L
print output==NULL
n
s
n
fin
q
br main
r
n
r
br p_eat 
c
n
n
print philosophers->r_fork_available 
print *philosophers->r_fork_available 
br init_fork 
r
c
n
q
r
br routine.c:
br do_action 
r
n
q
br free_philos 
br init_fork 
r
n
br 121
c
n
print philo[0]
c
c
print philo[0]
print philosophers[0]
print philosophers[0]->array
n
print philosophers[0]->array
print philosophers[0]->arrays
r
n
c
n
print philo[0]->arrays
n
n
print output->arrays
r
c
print philo[0]->arrays
n
print philo[0]->arrays
n
print output->arrays
n
c
print philo[0]->arrays
n
c
print philosophers[0]->array
print philosophers[0]->arrays
r
c
n
print philo[0]->arrays
r
c
print philo[0]->arrays
n
print philo[0]->arrays
c
print philosophers.h[0]->arrays
c
r
cc
c
q
br main
r
n
make
br init_fork 
r
n
print put_lock 
n
print put_lock 
n
print indec
print index
print philo
print philo[index]
print philo[index]->put_lock 
q
br init_fork 
r
n
print philo
print philo[index]
print philo[index]->put_lock
n
n
make
r
]
j
n
c
c
:q
q
br main
r
n
s
n
fin
n
s
fin
s
q
br philo_routine 
r
m
n
q
br philo_routine 
r
n
br do_action 
n
br p_eat
r
c
n
q
