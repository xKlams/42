print i
print min
q
br is_modulo_sorted 
r
br 70
r
c
print min
print stack.start-1 + (min + i)
print stack.start-1 + (min + i) % stack.size
print stack.start-1 + (min + i + 1)
print stack.array[stack.start-1 + (min + i + 1) % stack.size])
print stack.array[stack.start-1 + (min + i + 1) % stack.size]
print stack.array[5]
q
br is_modulo_sorted 
r
br 70
c
q
q
br is_modulo_sorted 
br 70
r
f
c
print stack.array[stack.start-1 + (min + i) % stack.size]
print stack.array[stack.start-1 + (min + i + 1) % stack.size])
print stack.array[stack.start-1 + (min + i + 1) % stack.size]
print stack.start-1 + (min + i + 1)
print stack.start-1 + (min + i + 1) % stack.size
print stack.size
q
q
r
br modulo_asc_aux 
r
n
print min
n
print min + i
print min
print min + i + 1
print stack.size
n
q
br is_modulo_sorted_asc 
r
n
s
n
print ft_modulo(min + i + 1, stack.size)
print min + i + 1
n
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print element 
print stack.start
print min
print i
q
br is_modulo_sorted_asc 
r
q
br is_modulo_sorted_asc 
r
n
print stack.array[stack.start + min]
q
br is_modulo_sorted_asc 
r
q
br is_modulo_sorted_asc 
r
n
print stack.array[stack.start + min]
m
n
print stack.array[stack.start + min]
print stack.array[stack.start + 0]
print stack.array[stack.start + 1]
print stack.array[stack.start + 2]
q
br is_modulo_sorted_asc 
r
n
br modulo_asc_aux 
r
c
print min
print stack.array[stack.start + min]
n
print stack.array[stack.start + 0]
print stack.array[stack.start + 1]
print stack.array[stack.start + 2]
n
print i
print pos
n
c
print pos
print position
c
n
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print i
print min
print stack.array[stack.start + 0]
n]
n
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print stack.array[stack.start + ft_modulo(min + i + 1, stack.size)]
print i
q
br modulo_asc_aux 
r
n
q
br is_modulo_sorted
r
n
br modulo_a
br modulo_aux 
r
c
print element 
n
print po
print pos
print min
print stack.array[stack.start]
print stack.array[stack.start + 1]
print stack.array[stack.start + 2]
print stack.array[stack.start + 3]
print stack.array[stack.start + 4]
print stack.array[stack.start + 5]
q
br is_modulo_sorted
br modulo_aux 
r
c
pritn element
print element 
print pos
n
q
br is_modulo_sorted
r
n
br modulo_aux 
c
n
print element 
print pos
print mi
print min
print stack.array[0]
print stack.array[stack.start]
print stack.array[stack.start + ]
print stack.array[stack.start + 1]
print stack.array[stack.start + 2]
print stack.array[stack.start + 3]
print stack.array[stack.start + 4]
n
br is_modulo_sorted_2
r
c
n
print output
n
q
br 295
r
s
n
n
r
n
r
s
n
br 106
c
s
n
print element 
print pos
print min
print stack.array[stack.start]
print stack.array[stack.start + 1]
print stack.array[stack.start + 2]
print stack.array[stack.start + 3]
print stack.array[stack.start + 4]
q
br 295
r
s
n
br 106
c
print element 
s
n
print element 
n
print min
print stack.array[stack.start]
print stack.array[stack.start + min]
print stack.array[stack.start + min + ] 
print stack.array[stack.start + min + 1] 
print stack.array[stack.start + (min + 1)$stack.size ] 
print stack.array[stack.start + (min + 1)%stack.size ] q
q
q
br 296
r
s
n
br 106
r
s
pritn element
print element
n
print pos
print min
q
q
br modulo_asc_aux 
r
n
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print 
print i
print i
n
print i
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print element
n
print stack.array[stack.start + ft_modulo(min + i + 1, stack.size)]
n
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print stack.array[stack.start + ft_modulo(min + i + 1, stack.size)]
n
print ft_modulo(min + i,stack.size)
print min
print min + i
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print stack.array[stack.start + 0]
print stack.array[stack.start + 1]
print stack.array[stack.start + 2]
print stack.array[stack.start + min]
print stack.array[stack.start + ft_modulo(min + i, stack.size)]
print stack.array[stack.start + ft_modulo(min + i + 1, stack.size)]
q
